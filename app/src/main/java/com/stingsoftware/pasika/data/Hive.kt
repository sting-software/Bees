package com.stingsoftware.pasika.data

import androidx.room.Entity
import androidx.room.ForeignKey
import androidx.room.PrimaryKey

/**
 * Data class representing a Hive.
 * Annotated with @Entity for Room Persistence Library to define a table in the database.
 *
 * @param id Unique identifier for the hive. Auto-generated by Room if set to 0.
 * @param apiaryId The ID of the parent apiary to which this hive belongs.
 * Uses a ForeignKey to ensure referential integrity.
 * @param hiveNumber A unique identifier or number for the hive within an apiary (e.g., "H1", "Hive 2").
 * @param hiveType The type of hive (e.g., "Langstroth", "Top Bar").
 * @param hiveTypeOther Optional: If hiveType is "Other", this stores the custom type.
 * @param frameType The type of frames used in the hive (e.g., "Deep", "Medium").
 * @param frameTypeOther Optional: If frameType is "Other", this stores the custom type.
 * @param material The material the hive is made from (e.g., "Wood", "Plastic").
 * @param materialOther Optional: If material is "Other", this stores the custom material.
 * @param breed The breed of bees in the hive (e.g., "Carniolan", "Italian").
 * @param breedOther Optional: If breed is "Other", this stores the custom breed.
 * @param lastInspectionDate Optional timestamp of the last inspection, in milliseconds.
 * @param notes Optional additional notes about the hive.
 * @param queenTagColor Optional: Color of the queen's tag.
 * @param queenTagColorOther Optional: If queenTagColor is "Other", this stores the custom color.
 * @param queenNumber Optional: Number on the queen's tag.
 * @param queenYear Optional: Year the queen was introduced/marked.
 * @param queenLine Optional: Genetic line of the queen.
 * @param queenCells Optional: Number of queen cells observed.
 * @param isolationFromDate Optional: Start date of queen isolation, in milliseconds.
 * @param isolationToDate Optional: End date of queen isolation, in milliseconds.
 * @param defensivenessRating Optional: Rating of the hive's defensiveness (e.g., 1-4).
 * @param framesTotal Optional: Total number of frames in the hive.
 * @param framesEggs Optional: Number of frames with eggs.
 * @param framesOpenBrood Optional: Number of frames with open brood.
 * @param framesCappedBrood Optional: Number of frames with capped brood.
 * @param framesFeed Optional: Number of frames with feed (honey/pollen).
 * @param givenBuiltCombs Optional: Number of built combs given to the hive.
 * @param givenFoundation Optional: Number of foundation frames given to the hive.
 * @param givenBrood Optional: Number of brood frames given to the hive.
 * @param givenBeesKg Optional: Weight of bees (in kg) given to the hive.
 * @param givenHoneyKg Optional: Weight of honey (in kg) given to the hive.
 * @param givenSugarKg Optional: Weight of sugar (in kg) given to the hive.
 * @param treatment Optional: Text describing any treatment applied to the hive.
 */
@Entity(
    tableName = "hives",
    foreignKeys = [ForeignKey(
        entity = Apiary::class,
        parentColumns = ["id"],
        childColumns = ["apiaryId"],
        onDelete = ForeignKey.CASCADE // When an Apiary is deleted, all its Hives are also deleted
    )]
)
data class Hive(
    @PrimaryKey(autoGenerate = true)
    val id: Long = 0L,
    val apiaryId: Long, // Foreign key linking to Apiary
    val hiveNumber: String?, // Made nullable as it might be auto-generated or not set initially
    val hiveType: String?,
    val hiveTypeOther: String? = null, // For custom hive types
    val frameType: String?,
    val frameTypeOther: String? = null, // For custom frame types
    val material: String?,
    val materialOther: String? = null, // For custom materials
    val breed: String?,
    val breedOther: String? = null, // For custom breeds
    val lastInspectionDate: Long? = null,
    val notes: String? = null,
    val queenTagColor: String? = null,
    val queenTagColorOther: String? = null, // For custom queen tag colors
    val queenNumber: String? = null,
    val queenYear: String? = null,
    val queenLine: String? = null,
    val queenCells: Int? = null,
    val isolationFromDate: Long? = null,
    val isolationToDate: Long? = null,
    val defensivenessRating: Int? = null,
    val framesTotal: Int? = null,
    val framesEggs: Int? = null,
    val framesOpenBrood: Int? = null,
    val framesCappedBrood: Int? = null,
    val framesFeed: Int? = null,
    val givenBuiltCombs: Int? = null,
    val givenFoundation: Int? = null,
    val givenBrood: Int? = null,
    val givenBeesKg: Double? = null,
    val givenHoneyKg: Double? = null,
    val givenSugarKg: Double? = null,
    val treatment: String? = null // NEW: Treatment field
)
